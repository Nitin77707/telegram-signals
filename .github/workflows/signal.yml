name: SignalBot

# Give the GITHUB_TOKEN permission to write back to your repo
permissions:
  contents: write

on:
  schedule:
    - cron: '*/1 * * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out your repository so the runner can see and commit files
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # ← allows later git push to authenticate
          fetch-depth: 0            # ← ensures git diff sees all history

      # 2) Set up Node.js
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3) Install dependencies
      - name: Install Dependencies
        run: npm install

      # 4) Run your signal script
      - name: Run Signal Script
        run: node signal.js
        env:
          BOT_TOKEN:       ${{ secrets.BOT_TOKEN }}
          CHAT_ID:         ${{ secrets.CHAT_ID }}
          ATR_LENGTH:      ${{ secrets.ATR_LENGTH }}
          RISK_MULTIPLIER: ${{ secrets.RISK_MULTIPLIER }}
          TP_PERCENT:      ${{ secrets.TP_PERCENT }}
          SL_PERCENT:      ${{ secrets.SL_PERCENT }}

      # 5) Commit state.json (if changed)
      - name: Commit state.json if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add state.json
            git commit -m "chore(state): update bot state"
            git push
          fi
